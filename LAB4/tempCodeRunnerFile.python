class DLLNode:
	# Insert the 'DLLNode' class you created in Lab1, since they should be the same
	def __init__(self, value):
		self.value = value
		self.nextNode = None
		self.prevNode = None

	def setValue(self,value):
		self.value = value

	def getValue(self):
		return self.value

	def setNext(self,nextNode):
		self.nextNode = nextNode

	def getNext(self):
		return self.nextNode

	def setPrev(self,prevNode):
		self.prevNode = prevNode

	def getPrev(self):
		return self.prevNode

class DLL:
	# Insert the 'DLL' class you created in Lab1, since they should be the same
	def __init__(self):
		self.size = 0
		self.headNode = DLLNode(None)
		self.tailNode = self.headNode
		self.tailNode.setNext(None)
		self.headNode.setPrev(None)

	def getSize(self):
		return self.size

	def isEmpty(self):
		return (self.getSize() == 0)

class DLLDeque(DLL):
	# Note that class "DLLQueue" inherits the class "DLL" attributes and methods

	def first(self):
		if self.isEmpty():
			return DLLNode(None)
		else:
			return self.headNode
		# The first() operation returns a reference value to the first element of the deque, but doesn’t remove it
		# REQUIRED

	def last(self):
		if self.isEmpty():
			return DLLNode(None)
		else:
			return self.tailNode
		# The last() operation returns a reference value to the last element of the deque, but doesn’t remove it
		# REQUIRED

	def insertFirst(self, value):
		newNode = DLLNode(value)
		newNode.setNext(self.headNode)
		newNode.setPrev(DLLNode(None))
		self.headNode.setPrev(newNode)
		self.headNode = newNode

		# The insertFirst() operation inserts an element at the front of the deque
		# REQUIRED

	def insertLast(self, value):
		newNode = DLLNode(value)
		newNode.setPrev(self.tailNode)
		newNode.setNext(DLLNode(None))
		self.tailNode.setNext(newNode)
		self.tailNode = newNode
		# The insertLast() operation inserts an element at the end of the deque
		# REQUIRED

	def removeFirst(self):
		if self.isEmpty():
			self.headNode = DLLNode(None)
			self.tailNode = DLLNode(None)
		else:
			firstNode = self.headNode
			self.headNode = self.headNode.getNext()
			firstNode.setNext(DLLNode(None))
			firstNode.setPrev(DLLNode(None))
			self.size -= 1
			return firstNode
		# The removeFirst() operation removes the element at the front of the deque
		# This should also return the 'DLLNode' that was removed
		# REQUIRED

	def removeLast(self):
		if self.isEmpty():
			self.headNode = DLLNode(None)
			self.tailNode = DLLNode(None)
		else:
			lastNode = self.tailNode
			self.tailNode.setNext(DLLNode(None))
			self.tailNode.setPrev(DLLNode(None))
			self.tailNode = self.tailNode.getPrev()
			self.size -= 1
			return lastNode
		# The removeLast() operation removes the element at the end of the deque
		# This should also return the 'DLLNode' that was removed
		# REQUIRED