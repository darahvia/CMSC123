import SLLQueue
class StackUsingQueue:
    def __init__(self):
        self.mainQueue = SLLQueue.SLLQueue()
        self.tempQueue = SLLQueue.SLLQueue()

    def push(self, value):
        self.mainQueue.enqueue(value)                                       # To push an element onto the stack, enqueue it into the mainQueue

    def pop(self):
        if self.mainQueue.isEmpty():
            return "Stack is empty."
          
        else:
            while self.mainQueue.getSize() > 1:
                self.tempQueue.enqueue(self.mainQueue.dequeue().getValue())     # Move all elements from mainQueue to tempQueue, except the last one

            poppedNode = self.mainQueue.dequeue().getValue()                    # The last element in mainQueue is the one to pop
            self.mainQueue, self.tempQueue = self.tempQueue, self.mainQueue     # Swap the mainQueue and tempQueue references

            return poppedNode
 
    def top(self):
        if self.mainQueue.isEmpty():
            return "Stack is empty."

        while self.mainQueue.getSize() > 1:
            self.tempQueue.enqueue(self.mainQueue.dequeue().getValue())     # Move all elements from mainQueue to tempQueue, except the last one

        topNode = self.mainQueue.front().getValue()                         # The last element in mainQueue is the top element
        self.tempQueue.enqueue(self.mainQueue.dequeue())                   # enqueue the remaining
        self.mainQueue, self.tempQueue = self.tempQueue, self.mainQueue     # Swap the mainQueue and tempQueue references

        return topNode

    def display(self):
        displayList = []
        
        if self.mainQueue.isEmpty():
            print("Stack is empty.")
        else:
            while not self.mainQueue.isEmpty():                                 # Move all elements from mainQueue to tempQueue and build the displayList
                value = self.mainQueue.dequeue().getValue()
                displayList.append(str(value))
                self.tempQueue.enqueue(value)

            self.mainQueue, self.tempQueue = self.tempQueue, self.mainQueue     # Swap the mainQueue and tempQueue references

            print("Stack:", " ".join(displayList))

# Example

stack = StackUsingQueue()

stack.display()
print(stack.top())
stack.pop()
stack.display()
stack.push("imong mama")
stack.display()